name: Publish to dist branch

on:
  push:
    branches:
      - main

jobs:
  publish-to-dist-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found after build"
            exit 1
          fi
          if [ -z "$(ls -A dist 2>/dev/null)" ]; then
            echo "Error: dist directory is empty"
            exit 1
          fi
          echo "Build verification successful - dist directory contains files"

      - name: Read version from package.json
        id: pkg
        run: |
          version=$(node -p "require('./package.json').version")
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check
        run: |
          if git rev-parse "v${{ steps.pkg.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag already exists, skipping tag creation."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy dist folder to dist-only branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Backup dist directory before switching branches
          cp -r dist /tmp/dist-backup
          echo "Backed up dist directory to /tmp/dist-backup"

          # Create orphan branch for dist-only
          git checkout --orphan dist-only
          git reset --hard
          git clean -fd

          # Copy built files from backup
          if [ -d "/tmp/dist-backup" ] && [ "$(ls -A /tmp/dist-backup 2>/dev/null)" ]; then
            cp -r /tmp/dist-backup/* .
            echo "Successfully copied files from backup dist directory"
          else
            echo "Error: backup dist directory is empty or doesn't exist"
            exit 1
          fi

          # Commit and push dist-only branch
          git add .
          if ! git commit -m "Deploy version v${{ steps.pkg.outputs.version }}"; then
            echo "Error: Failed to commit changes"
            exit 1
          fi
          if ! git push origin dist-only --force; then
            echo "Error: Failed to push to dist-only branch"
            exit 1
          fi
          echo "Successfully deployed to dist-only branch"

      - name: Tag this version
        if: steps.check.outputs.exists == 'false'
        run: |
          if ! git tag v${{ steps.pkg.outputs.version }}; then
            echo "Error: Failed to create tag v${{ steps.pkg.outputs.version }}"
            exit 1
          fi
          if ! git push origin v${{ steps.pkg.outputs.version }}; then
            echo "Error: Failed to push tag v${{ steps.pkg.outputs.version }}"
            exit 1
          fi
          echo "Successfully created and pushed tag v${{ steps.pkg.outputs.version }}"
